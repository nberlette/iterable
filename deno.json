{
  "license": "MIT",
  "author": {
    "name": "Nicholas Berlette",
    "email": "nick@berlette.com",
    "url": "https://github.com/nberlette"
  },
  "tasks": {
    "test:base": "deno test -A --parallel --permit-no-files --clean --coverage",
    "test": "deno task test:base --no-check=remote ./packages/*",
    "test:doc": "deno task test:base --doc --no-check=remote ./packages/*",
    "test:nocheck": "deno task test:base --no-check ./packages/*",
    "fmt:check": "deno fmt --check ./packages/**/*",
    "fmt:write": "deno fmt ./packages/**/*",
    "lint": "deno lint ./packages/**/*",
    "lint:fix": "deno lint --fix ./packages/**/*",
    "lint:doc": "deno doc --lint ./packages/**/mod.ts",
    "doc:html": "deno doc --html --output=docs ./packages/**/mod.ts",
    "doc:json": "deno doc --json ./packages/**/mod.ts",
    "coverage:html": "deno task test:doc && deno coverage --html .coverage",
    "coverage:lcov": "deno task test:doc && deno coverage --lcov --output=.coverage/lcov .coverage",
    "check": "deno task fmt:check && deno task lint && deno task lint:doc && deno task test:doc",
    "prepublish": "deno task check && deno publish --dry-run",
    "publish": "deno task prepublish && deno publish"
  },
  "workspace": [
    "./packages/weak_map"
  ],
  "imports": {
    "@std/assert": "jsr:@std/assert@1",
    "@std/expect": "jsr:@std/expect@1",
    "@std/testing": "jsr:@std/testing@1"
  },
  "publish": {
    "include": [
      "./packages/**/*.{ts,tsx,js,jsx,md,json,wasm}",
      "./packages/*/LICENSE*"
    ],
    "exclude": [
      "**/*.test.*",
      "**/*.bench.*",
      "**/*.spec.*",
      "**/{testdata,fixtures,target,coverage,docs,bench,perf}",
      "**/{test,tests,bench,perf,spec}*"
    ]
  },
  "lint": {
    "exclude": [
      "./internal"
    ],
    "rules": {
      "exclude": [
        "no-explicit-any",
        "no-namespace",
        "ban-types"
      ]
    }
  },
  "fmt": {
    "exclude": [
      "**/{node_modules,vendor,testdata,fixtures}/**",
      "**/{docs,dist,build,target,coverage,.coverage}/**"
    ]
  },
  "lock": true,
  "vendor": false,
  "nodeModulesDir": "auto",
  "exclude": [
    "**/{target,node_modules,vendor}/**"
  ]
}
